<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="VoiceCraft.Maui.Views.Desktop.Voice"
             xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:toolkit="clr-namespace:SimpleToolkit.Core;assembly=SimpleToolkit.Core"
             xmlns:vm="clr-namespace:VoiceCraft.Maui.ViewModels"
             Title="Voice"
             Shell.FlyoutBehavior="Disabled">
    <ContentPage.BindingContext>
        <vm:VoiceViewModel />
    </ContentPage.BindingContext>

    <Shell.BackButtonBehavior>
        <BackButtonBehavior IsEnabled="False" IsVisible="False" />
    </Shell.BackButtonBehavior>

    <Grid>
        <Image Aspect="AspectFill" Source="{AppThemeBinding Default='bgdark.png', Dark='bgdark.png', Light='bglight.png'}" />
        <ScrollView>
            <Grid RowDefinitions="Auto, Auto, *, Auto">
                <Frame Grid.Row="0"
                       HorizontalOptions="Fill"
                       VerticalOptions="StartAndExpand">
                    <Grid ColumnDefinitions="Auto, Auto, *">
                        <toolkit:Icon Grid.Column="0"
                                      Margin="3,3,20,3"
                                      HeightRequest="35"
                                      Source="microphone.png"
                                      TintColor="{AppThemeBinding Dark='White',
                                                                  Light='Black'}" />
                        <Label Grid.Column="1"
                               FontAttributes="Bold"
                               FontSize="Title"
                               Text="Voice"
                               VerticalTextAlignment="Center" />
                        <Label Grid.Column="2"
                               FontAttributes="Bold"
                               FontSize="Title"
                               HorizontalTextAlignment="End"
                               Text="{Binding Participants.Count, StringFormat='Connected Participants: {0}'}"
                               VerticalTextAlignment="Center" />

                    </Grid>
                </Frame>
                <Frame Grid.Row="1"
                       Margin="10"
                       HorizontalOptions="Fill"
                       VerticalOptions="StartAndExpand">
                    <Label FontSize="Title"
                           HorizontalTextAlignment="Center"
                           Text="{Binding StatusText}" />
                </Frame>
                <CollectionView Grid.Row="2"
                                Margin="10"
                                ItemsSource="{Binding Participants}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Frame HorizontalOptions="Fill" VerticalOptions="StartAndExpand">
                                <Grid ColumnDefinitions="Auto, *, Auto, Auto">
                                    <Label Grid.Column="0"
                                           Margin="5"
                                           FontSize="Title"
                                           Text="{Binding Participant.Name}"
                                           VerticalTextAlignment="Center" />
                                    <toolkit:Icon Grid.Column="1"
                                                  HeightRequest="35"
                                                  HorizontalOptions="End"
                                                  Source="microphone_off.png"
                                                  TintColor="{AppThemeBinding Dark='White',
                                                                              Light='Black'}"
                                                  WidthRequest="35">
                                        <toolkit:Icon.Style>
                                            <Style TargetType="toolkit:Icon">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMuted}"
                                                                 TargetType="toolkit:Icon"
                                                                 Value="True">
                                                        <Setter Property="IsVisible" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsMuted}"
                                                                 TargetType="toolkit:Icon"
                                                                 Value="False">
                                                        <Setter Property="IsVisible" Value="Collapse" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </toolkit:Icon.Style>
                                    </toolkit:Icon>
                                    <toolkit:Icon Grid.Column="2"
                                                  HeightRequest="35"
                                                  HorizontalOptions="End"
                                                  Source="headphones_off.png"
                                                  TintColor="{AppThemeBinding Dark='White',
                                                                              Light='Black'}"
                                                  WidthRequest="35">
                                        <toolkit:Icon.Style>
                                            <Style TargetType="toolkit:Icon">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsDeafened}"
                                                                 TargetType="toolkit:Icon"
                                                                 Value="True">
                                                        <Setter Property="IsVisible" Value="Visible" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsDeafened}"
                                                                 TargetType="toolkit:Icon"
                                                                 Value="False">
                                                        <Setter Property="IsVisible" Value="Collapse" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </toolkit:Icon.Style>
                                    </toolkit:Icon>
                                </Grid>
                            </Frame>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
                <Frame Grid.Row="3"
                       Margin="10"
                       HorizontalOptions="Fill"
                       VerticalOptions="StartAndExpand">
                    <Grid ColumnDefinitions="*, *, *" ColumnSpacing="5">
                        <toolkit:ContentButton Grid.Column="0" Command="{Binding DisconnectCommand}">
                            <Border x:Name="disconnectBorder"
                                    Padding="2"
                                    Background="#4fF00000"
                                    StrokeThickness="0">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="4" />
                                </Border.StrokeShape>
                                <Label Margin="5"
                                       FontSize="Small"
                                       HorizontalTextAlignment="Center"
                                       Text="Disconnect" />
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroupList>
                                    <VisualStateGroup>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter TargetName="disconnectBorder" Property="Background" Value="{AppThemeBinding Dark={StaticResource Key=PrimaryButtonPressedLight}, Light={StaticResource Key=PrimaryButtonPressedDark}}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter TargetName="disconnectBorder" Property="Background" Value="{AppThemeBinding Dark={StaticResource Key=PrimaryButtonHoverLight}, Light={StaticResource Key=PrimaryButtonHoverDark}}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateGroupList>
                            </VisualStateManager.VisualStateGroups>
                        </toolkit:ContentButton>
                        <toolkit:ContentButton Grid.Column="1" Command="{Binding MuteUnmuteCommand}">
                            <Border x:Name="muteBorder"
                                    Padding="2"
                                    Background="#2fFFFFFF"
                                    StrokeThickness="0">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="4" />
                                </Border.StrokeShape>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMuted}"
                                                         TargetType="Border"
                                                         Value="True">
                                                <Setter Property="Background" Value="#3fFFFFFF" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsMuted}"
                                                         TargetType="Border"
                                                         Value="False">
                                                <Setter Property="Background" Value="#2fFFFFFF" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Label Margin="5"
                                       FontSize="Small"
                                       HorizontalTextAlignment="Center"
                                       Text="Mute">
                                    <Label.Style>
                                        <Style TargetType="Label">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMuted}"
                                                             TargetType="Label"
                                                             Value="True">
                                                    <Setter Property="Text" Value="Unmute" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsMuted}"
                                                             TargetType="Label"
                                                             Value="False">
                                                    <Setter Property="Text" Value="Mute" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroupList>
                                    <VisualStateGroup>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter TargetName="muteBorder" Property="Background" Value="{AppThemeBinding Dark={StaticResource Key=PrimaryButtonPressedLight}, Light={StaticResource Key=PrimaryButtonPressedDark}}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter TargetName="muteBorder" Property="Background" Value="{AppThemeBinding Dark={StaticResource Key=PrimaryButtonHoverLight}, Light={StaticResource Key=PrimaryButtonHoverDark}}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateGroupList>
                            </VisualStateManager.VisualStateGroups>
                        </toolkit:ContentButton>

                        <toolkit:ContentButton Grid.Column="2" Command="{Binding DeafenUndeafenCommand}">
                            <Border x:Name="deafenBorder"
                                    Padding="2"
                                    Background="#2fFFFFFF"
                                    StrokeThickness="0">
                                <Border.StrokeShape>
                                    <RoundRectangle CornerRadius="4" />
                                </Border.StrokeShape>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDeafened}"
                                                         TargetType="Border"
                                                         Value="True">
                                                <Setter Property="Background" Value="#3fFFFFFF" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsDeafened}"
                                                         TargetType="Border"
                                                         Value="False">
                                                <Setter Property="Background" Value="#2fFFFFFF" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Label Margin="5"
                                       FontSize="Small"
                                       HorizontalTextAlignment="Center"
                                       Text="Deafen">
                                    <Label.Style TargetType="Label">
                                        <Style TargetType="Label">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsDeafened}"
                                                             TargetType="Label"
                                                             Value="True">
                                                    <Setter Property="Text" Value="Undeafen" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsDeafened}"
                                                             TargetType="Label"
                                                             Value="False">
                                                    <Setter Property="Text" Value="Deafen" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Label.Style>
                                </Label>
                            </Border>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroupList>
                                    <VisualStateGroup>
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter TargetName="deafenBorder" Property="Background" Value="{AppThemeBinding Dark={StaticResource Key=PrimaryButtonPressedLight}, Light={StaticResource Key=PrimaryButtonPressedDark}}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter TargetName="deafenBorder" Property="Background" Value="{AppThemeBinding Dark={StaticResource Key=PrimaryButtonHoverLight}, Light={StaticResource Key=PrimaryButtonHoverDark}}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateGroupList>
                            </VisualStateManager.VisualStateGroups>
                        </toolkit:ContentButton>
                    </Grid>
                </Frame>
            </Grid>
        </ScrollView>
    </Grid>
</ContentPage>