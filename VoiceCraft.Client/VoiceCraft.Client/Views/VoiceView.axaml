<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="VoiceCraft.Client.Views.VoiceView"
             xmlns:vm="clr-namespace:VoiceCraft.Client.ViewModels"
             xmlns:vmData="clr-namespace:VoiceCraft.Client.ViewModels.Data"
             x:DataType="vm:VoiceViewModel">
    <Grid RowDefinitions="Auto, *">
        <Border Grid.Row="0"
                Padding="0,10,0,10"
                Background="{DynamicResource BackgroundBrush}">
            <Grid RowDefinitions="Auto, Auto">
                <TextBlock Grid.Row="0"
                           VerticalAlignment="Center"
                           FontSize="20"
                           FontWeight="Bold"
                           Text="{Binding StatusTitleText}"
                           TextAlignment="Center" />
                <TextBlock Grid.Row="1"
                           Margin="0,10,0,0"
                           Text="{Binding StatusDescriptionText}"
                           TextAlignment="Center"
                           IsVisible="{Binding StatusDescriptionText, Converter={x:Static StringConverters.IsNotNullOrEmpty}}">
                </TextBlock>
            </Grid>
        </Border>
        <ListBox Grid.Row="1"
                 Margin="0,10,0,0"
                 Background="Transparent"
                 ItemsSource="{Binding EntityViewModels}"
                 SelectedItem="{Binding SelectedEntity}"
                 SelectionMode="Single">
            <ListBox.ItemTemplate>
                <DataTemplate x:DataType="vmData:EntityViewModel">
                    <Grid ColumnDefinitions="Auto, *, Auto">
                        <TextBlock Grid.Column="0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   FontSize="16"
                                   FontWeight="Bold"
                                   Text="{Binding DisplayName}"
                                   Classes.IsNotVisible="{Binding !IsVisible}">
                            <TextBlock.Styles>
                                <Style Selector="TextBlock.IsNotVisible">
                                    <Setter Property="Foreground" Value="Gray" />
                                </Style>
                            </TextBlock.Styles>
                        </TextBlock>

                        <PathIcon Grid.Column="1"
                                  Margin="5,0,0,0"
                                  IsVisible="{Binding IsSpeaking}"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Data="{StaticResource SpeakerRegular}" />

                        <StackPanel Grid.Column="2"
                                    HorizontalAlignment="Right"
                                    Orientation="Horizontal"
                                    Spacing="10">
                            <PathIcon IsVisible="{Binding IsMuted}" Data="{StaticResource MicOffRegular}" />
                            <PathIcon IsVisible="{Binding IsDeafened}" Data="{StaticResource SpeakerOffRegular}" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <StackPanel Grid.Row="1"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal"
                    Margin="0,0,0,10"
                    Spacing="10">
            <ToggleButton CornerRadius="50"
                          Width="50"
                          Height="50"
                          IsChecked="{Binding IsMuted}">
                <Panel>
                    <PathIcon Classes="micOn"
                              Data="{StaticResource MicOnRegular}"
                              Classes.IsSpeaking="{Binding IsSpeaking}">
                        <PathIcon.Styles>
                            <Style Selector="PathIcon.IsSpeaking">
                                <Setter Property="Foreground" Value="{DynamicResource SuccessAccentBrush}" />
                            </Style>
                        </PathIcon.Styles>
                    </PathIcon>
                    <PathIcon Classes="micOff" Data="{StaticResource MicOffRegular}" />
                </Panel>
                <ToggleButton.Styles>
                    <!-- Turns out, there is an order to styles... -->
                    <Style Selector="ToggleButton PathIcon.micOn">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                    <Style Selector="ToggleButton:checked PathIcon.micOn">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                    <Style Selector="ToggleButton PathIcon.micOff">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                    <Style Selector="ToggleButton:checked PathIcon.micOff">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                </ToggleButton.Styles>
            </ToggleButton>
            <ToggleButton CornerRadius="50"
                          Width="50"
                          Height="50"
                          IsChecked="{Binding IsDeafened}">
                <Panel>
                    <PathIcon Classes="speakerOn" Data="{StaticResource SpeakerRegular}" />
                    <PathIcon Classes="speakerOff" Data="{StaticResource SpeakerOffRegular}" />
                </Panel>
                <ToggleButton.Styles>
                    <!-- Turns out, there is an order to styles... -->
                    <Style Selector="ToggleButton PathIcon.speakerOn">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                    <Style Selector="ToggleButton:checked PathIcon.speakerOn">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                    <Style Selector="ToggleButton PathIcon.speakerOff">
                        <Setter Property="IsVisible" Value="False" />
                    </Style>
                    <Style Selector="ToggleButton:checked PathIcon.speakerOff">
                        <Setter Property="IsVisible" Value="True" />
                    </Style>
                </ToggleButton.Styles>
            </ToggleButton>
            <Button Background="{DynamicResource ErrorBackgroundBrush}"
                    CornerRadius="50"
                    Width="50"
                    Height="50"
                    Command="{Binding DisconnectCommand}">
                <PathIcon Data="{StaticResource CallEndRegular}" />
            </Button>
        </StackPanel>

        <Border Grid.Row="1"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                Background="{DynamicResource BackgroundBrush}"
                PointerPressed="ModalBackgroundOnPointerPressed"
                Classes.ShowModal="{Binding ShowModal}"
                Classes.HideModal="{Binding !ShowModal}">
            <Border Classes="card"
                    MaxWidth="500"
                    VerticalAlignment="Center"
                    Padding="15"
                    Margin="10">
                <StackPanel>
                    <TextBlock HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               FontSize="15"
                               Text="{Binding SelectedEntity.DisplayName, FallbackValue='N.A.'}" />
                    <Grid ColumnDefinitions="Auto, Auto">
                        <TextBlock Grid.Column="0" VerticalAlignment="Center"
                                   Text="Volume" />
                        <TextBlock Grid.Column="1" VerticalAlignment="Center"
                                   Text="{Binding SelectedEntity.Volume, StringFormat='{} {0:P0}', FallbackValue='N.A.'}" />
                    </Grid>
                    <Slider Maximum="2.0"
                            Minimum="0.0"
                            Value="{Binding SelectedEntity.Volume, FallbackValue=0}" />
                    <ToggleButton HorizontalAlignment="Stretch"
                                  IsChecked="{Binding SelectedEntity.UserMuted, FallbackValue=False}">
                        <TextBlock Text="Muted" />
                    </ToggleButton>
                </StackPanel>
            </Border>

            <Border.Transitions>
                <Transitions>
                    <DoubleTransition Property="Opacity" Duration="0:0:0.2" />
                </Transitions>
            </Border.Transitions>
            <Border.Styles>
                <Style Selector="Border.ShowModal">
                    <Setter Property="IsHitTestVisible" Value="True" />
                    <Setter Property="Opacity" Value="1" />
                </Style>
            </Border.Styles>
            <Border.Styles>
                <Style Selector="Border.HideModal">
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Setter Property="Opacity" Value="0" />
                </Style>
            </Border.Styles>
        </Border>
    </Grid>
</UserControl>